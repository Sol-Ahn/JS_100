// 문제21: set은 어떻게 만드나요?
// 다음 중 set을 만드는 방법으로 올바른 것을 모두 고르시오.

/*선택지
1) var x = {1, 2, 3, 5, 6, 7};
2) var x = {};
3) var x = new Set('javascript');
4) var x = new Set(range(5));
5) var x = new Set();
*/

// 내가 쓴 답안
// 1), 3), 4)

// 정답
// 3), 5)
// Set 객체는 자료형에 관계 없이 원시값과 객체 참조 모두 '유일한 값'을 저장할 수 있다.
// 구문: new Set([iterable]);
// - Set 선언 예시
// var set1 = new Set();
// var set2 = new Set([1, 2, 3]);
// - Set methods
// has(): set에 값이 존재하는지 확인 / delete(): set에서 값을 제거 / clear(): set에서 모든 값 제거

// --------------------------------------------------------------------------------------------

// 문제22: 배수인지 확인하기
// 다음 중 변수 i가 6의 배수인지 확인하는 방법으로 올바른 것은?

/*선택지
1) i / 6 == 0
2) i % 6 == 0
3) i & 6 == 0
4) i | 6 == 0
5) i // 6 == 0
*/

// 내가 쓴 답안
// 2) i % 6 == 0
// 이유: 변수 i가 6의 배수가 되려면 i를 6으로 나눴을 때 나머지가 0이어야 한다.
// 나머지 값을 연산할 때 사용하는 연산자는 '%'이다.

// 정답
// 2) i % 6 == 0

// --------------------------------------------------------------------------------------------

// 문제23: OX 문제
// console.log(10/3)의 출력 결과는 3이다.

// 내가 쓴 답안
// X
// 이유: '/' 연산자는 소숫점까지 계산한다.

// 정답
// X
// 출력 결과는 3.3333333333333335
// 소숫점이 없는 정수를 출력하고자 할 때는 'Math.floor()' 함수를 쓰면 됩니다.

// --------------------------------------------------------------------------------------------

// 문제24: 대문자로 바꿔주세요!
// 이름이 입력되면 전부 대문자로 출력되는 프로그램을 만들어주세요.

// 입력 : mary
// 출력 : MARY

// 내가 쓴 답안
{
  const name = prompt("이름을 입력하세요.");
  console.log(name.toUpperCase());
}

// 정답
{
  var name = prompt("이름을 입력하세요.");
  console.log(name.toUpperCase());
}

// --------------------------------------------------------------------------------------------

// 문제25: 원의 넓이를 구하세요
// 원의 넓이는 반지름의 길이 x 반지름의 길이 x 3.14로 구할 수 있습니다.
// 함수를 사용하여 원의 넓이를 구하는 코드를 작성해봅시다.
// 입력으로 반지름의 길이 정수 n이 주어지면 원의 넓이를 반환하는 함수를 만들어 주세요.

// 내가 쓴 답안
{
  const area = (radius) => radius * radius * 3.14;
  const n = prompt("반지름의 길이를 입력하세요");
  console.log(area(n));
}

// 정답
{
  function circle(n) {
    const result = n * n * 3.14;

    return result;
  }

  const r = prompt("원의 반지름을 입력하세요.");
  console.log(circle(r));
}
