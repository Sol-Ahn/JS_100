// 문제1: 배열의 삭제
// 다음 배열에서 400, 500을 삭제하는 코드를 입력하세요.

// 내가 쓴 답안
{
  var nums = [100, 200, 300, 400, 500];
  var newList = nums.splice(3, 2);
  console.log(nums);
}

// 정답
{
  var nums = [100, 200, 300, 400, 500];
  nums.pop();
  nums.pop();
  console.log(nums);
}

// --------------------------------------------------------------------

// 문제2: 배열의 내장함수
// <pass>부분에 배열 내장함수를 이용하여 코드를 입력하고 다음과 같이 출력되게 하세요.
// 데이터
{
  var arr = [200, 100, 300];
  // pass
  // 내가 쓴 답안
  arr.splice(2, 0, 10000);
  console.log(arr);
}
// 출력
// [200, 100, 10000, 300];

// 정답
{
  var arr = [200, 100, 300];
  arr.splice(2, 0, 10000);
  console.log(arr);
}

// --------------------------------------------------------------------

// 문제3: 변수의 타입
// 다음 출력 값으로 올바른 것은?
var arr = [100, 200, 300];
console.log(typeof arr);
/* 선택지
1) undefined
2) string
3) number
4) object
*/

// 내가 쓴 답안
// 4) object
// 이유: arr은 배열이고, 배열의 타입은 객체(object)이다.

// 정답
// 4) object
// undefined, string, number는 모두 기본 자료형(primitive type)이다.

// --------------------------------------------------------------------

// 문제4: 변수의 타입2
// 다음 변수 a를 typeof(a)로 넣었을 때 출력될 값과의 연결이 알맞지 않은 것은?
/* 선택지 
1)  입력 : a = 1, 출력 : number
2)  입력 : a = 2.22, 출력 : boolean
3)  입력 : a = 'p', 출력 : string
4)  입력 : a = [1, 2, 3], 출력 : object
*/

// 내가 쓴 답안
// 입력 : a = 2.22, 출력 : boolean
// 변수 a의 타입은 'number'이며, 'true'나 'false'의 타입이 'boolean'이다.

// 정답
// 2) 입력 : a = '2.22', 출력 : boolean
// 'number'가 맞는 출력값이다. 'boolean'에 해당하는 값은 'true'와 'false' 두 가지이다.

// --------------------------------------------------------------------

// 문제5: for문 계산
// 다음 코드의 출력값으로 알맞은 것은?
{
  var a = 10;
  var b = 2;

  for (var i = 1; i < 5; i += 2) {
    a += i;
  }

  console.log(a + b);
}

/* 선택지
1) 10
2) 12
3) 14
4) 16
*/

// 내가 쓴 답안
/*
i = 1 일 때, a = 11
i = 3 일 때, a = 14
(i < 5 이므로, 여기서 반복문 멈춤)
a + b = 14 + 2

답은 4) 16
*/

// 정답
// 4) 16
// i값이 '1'부터 시작하고, 한 번 순환할 때마다 '2'씩 증가하기 때문에 for문은 총 두 번 순환한다.

// --------------------------------------------------------------------

// 문제6: False
// 다음 중 True인 것은?

/* 선택지
1) NaN
2) 1
3) ""
4) 0
5) undefined
*/

// 내가 쓴 답안
// 2) 1
// 이유: 1은 'number' type이므로 'True'이다.

// 정답
// 2) 1
// JavaScript에서는 'null', 'undefined', '0', '빈 문자열', 'NaN', 'false'를 제외하고는 모두 True인 값으로 평가한다.

// --------------------------------------------------------------------

// 문제7: 변수명
// 다음 중 변수명으로 사용할 수 없는 것은?
/* 선택지 
1) age
2) Age
3) let
4) _age
5) 1age
*/

// 내가 쓴 답안
// 3) let , 5) 1age
// 이유: let은 예약어이기 때문에 변수명으로 사용할 수 없다. 또한 변수명은 숫자로 시작할 수 없다.

// 정답
// JavaScript 식별자는 문자, 밑줄(_) 혹은 달러 기호($)로 시작해야 하며,
// let은 이미 JavaScript 문법에 존재하는 예약어라 사용이 불가능하다.

// --------------------------------------------------------------------

// 문제8: 객체의 키 이름 중복
// 다음 코드의 출력값을 입력하세요.

var d = {
  height: 180,
  weight: 78,
  weight: 84,
  temperature: 36,
  eyesight: 1,
};

console.log(d["weight"]);

// 내가 쓴 답안
// 출력값: 84
// 이유: 키 이름이 중복되면 후자가 전자의 값을 덮어쓰기 한다.

// 정답
// 출력값: 84

// --------------------------------------------------------------------

// 문제9: concat을 활용한 출력 방법
// 다음 코드를 완성하여 날짜와 시간을 출력하세요.
// 데이터
var year = "2019";
var month = "04";
var day = "26";
var hour = "11";
var minute = "34";
var second = "27";

// 내가 쓴 답안
var result = year.concat(
  "/",
  month,
  "/",
  day,
  " ",
  hour,
  ":",
  minute,
  ":",
  second
);

console.log(result);

// 출력
// 2019/04/26 11:34:27

// 정답
// var result = year.concat('/', month, '/', day, ' ', hour, ':', minute, ':', second);
// concat() 메서드는 매개변수로 전달된 문자열을 메서드를 호출한 문자열에 붙여 새로운 문자열로 반환

// --------------------------------------------------------------------

// 문제10: 별 찍기

/* 
- 입력
5

- 출력
    *
   ***
  *****
 *******
*********
*/

// 내가 쓴 답안
var input = 5;
var star = "*";
var space = " ";

for (var i = 0; i < input; i++) {
  var result = "";
  for (var j = 0; j < input + (input - 1); j++) {
    if (j <= input - 1 + i && j >= input - 1 - i) {
      result += star;
    } else {
      result += space;
    }
  }
  console.log(result);
}

// 정답
const n = prompt("숫자를 입력하세요.");
let tree = "";

for (let i = 1; i <= n; i++) {
  let star = "";
  for (let j = 1; j <= n - i; j++) {
    star += " ";
  }
  for (let k = 1; k <= 2 * i - 1; k++) {
    star += "*";
  }
  tree += star + "\n";
}

console.log(tree);
